
# This script sets up Travis CI with the following matrix:
#
# linux: gcc  , make check, qucs-test, gcov, coveralls integration
# linux: clang, make check, qucs-test, doxygen deploy
# osx:   clang, make check, qucs-test
#
# The matrix tries to balance the run time of the instances instead of
# creating new instances for shorter jobs.
#
# Most time consuming tasks:
# - setup of gcc
# - gcov data collection
# - install Qt on OSX
# - doxygen build (master only)

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

python:
  - "2.7"
virtualenv:
  system_site_packages: true

matrix:
  exclude:
    - os: osx
      compiler: gcc

# Set secure environment with encrypted string containing GIT_NAME, GIT_EMAIL and GH_TOKEN
env:
  global:
    - secure: "HfplEtCmFfgmKIKWfwe/Pw+BZcciFiIfw5gP/nF7IRVDSIjxOzwBHC+E/TyayR1iRmp3dHs6/fOrLFFNWJZzzH/qdmxGybrvECkgp5oF2ho6paAa3zcdTXan6r0+ye4JV20n6pqBtOM5IS3eQv1eFc81lTa80hzBiPQfEp3tW9w="

before_install:

  # Set variables for readability.
  - if [[ $TRAVIS_OS_NAME == linux ]]; then LINUX=true; fi
  - if [[ $TRAVIS_OS_NAME == osx ]]; then OSX=true; fi
  - if [[ $CC == gcc ]]; then GCC=true; fi
  - if [[ $CC == clang ]]; then CLANG=true; fi

  - if [[ $TRAVIS_BRANCH == master ]] ; then MASTER=true; fi

  # Set xvfb for headless qucs GUI test
  - "export DISPLAY=:99.0"
  -  if [[ $LINUX ]]; then sh -e /etc/init.d/xvfb start; fi

install:
  # Setup Linux
  # Set package repository for g++4.8, newer GNU tools
  - if [[ $LINUX ]]; then
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo add-apt-repository -y ppa:dns/gnu;
    fi

  # Install dependencies
  - if [[ $LINUX ]]; then
      sudo apt-get update -qq;
      sudo apt-get install build-essential;
      sudo apt-get install libqt4-dev libqt4-qt3support;
      sudo apt-get install automake libtool gperf flex bison;
    fi

  # We want to compile with g++ 4.8 when rather than the default g++
  - if [[ $LINUX && $GCC ]]; then
      sudo apt-get install -qq gcc-4.8 g++-4.8;
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90;
    fi

  # Set up for Coveralls for GCC (LINUX) only
  # lcov is required by configure, only gcov really needed thou
  - if [[ $GCC ]]; then
      sudo apt-get install lcov ;
      sudo pip install cpp-coveralls ;
    fi

  # Set up for Doxygen
  - if [[ $LINUX && $CLANG ]]; then
      sudo apt-get install -qq doxygen texlive graphviz ;
    fi

  # Qucs-Test uses Numpy to compare results
  - if [[ $LINUX ]]; then sudo apt-get install -qq python-numpy; fi
  - if [[ $LINUX ]]; then sudo apt-get install -qq python-matplotlib; fi

  # Setup OSX
  # Installed already: autoconf automake libtool pkg-config
  - if [[ $OSX ]]; then
      brew update;
      brew install flex;
      brew link --force flex;
      brew install bison;
      brew link --force bison;
      pip install matplotlib;
    fi

  # Use tap for ADMS
  - if [[ $OSX ]]; then
      brew tap guitorri/tap;
      brew install adms;
    fi

  # Install official Qt (185MB)
  # Homebrew Qt binary has no Qt3Support (build from souce takes hours)
  - if [[ $OSX ]]; then
      QT_VERSION=4.8.7 ;
      curl -L -O http://download.qt.io/official_releases/qt/4.8/4.8.7/qt-opensource-mac-${QT_VERSION}.dmg ;
      hdiutil mount qt-opensource-mac-${QT_VERSION}.dmg ;
      sudo installer -pkg /Volumes/Qt\ 4.8.7/Qt.mpkg -target / ;
      hdiutil unmount /Volumes/Qt\ 4.8.7 ;
    fi

script:
  - uname -a
  - $CXX --version
  - autoconf --version
  - automake --version
  - which flex  && flex --version
  - which bison && bison --version
  # use gcov matched to GCC
  - if [[ $GCC ]]; then which gcov-4.8 && gcov-4.8 --version; fi
  - if [[ $GCC ]]; then  lcov --version; fi
  - python --version
  - python -c "import numpy; print numpy.__version__"
  - pwd
  - ls

  # fetch gtest...
  - wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz -O /tmp/gtest.tar.gz
  - mkdir /tmp/gtest
  - tar --strip-components=1 -C /tmp/gtest -xvf /tmp/gtest.tar.gz


  # Build ADMS from release (avoid need of Perl and its modules)
  #   Workaround sourceforge shortage, use personal Dropbox.
  #   wget http://sourceforge.net/projects/mot-adms/files/adms-source/2.3/adms-2.3.4.tar.gz -O /tmp/adms-2.3.4.tar.gz;
  - if [[ $LINUX ]]; then
      wget https://www.dropbox.com/s/0d0hbsopb1xdg5y/adms-2.3.4.tar.gz -O /tmp/adms-2.3.4.tar.gz;
      tar -xzvf /tmp/adms-2.3.4.tar.gz;
      cd adms-2.3.4 && ./configure --prefix=/usr && make && sudo make install && cd ..;
    fi

  # Check available tools
  - which admsXml && admsXml --version

  # run all checks
  - ./bootstrap
  - ./configure --disable-dependency-tracking --with-gtest=/tmp/gtest
  - make distcheck DISTCHECK_CONFIGURE_FLAGS=--with-gtest=/tmp/gtest
  - echo $TRAVIS_BRANCH

  # incomplete
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == develop ]] ; then
      echo developmentstuff...;
    fi
