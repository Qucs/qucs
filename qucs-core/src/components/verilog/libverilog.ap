#
# src/components/verilog/libverilog.ap - Autodsp input file.
#
# Copyright (C) 2007, 2008, 2009, 2010 Stefan Jahn <stefan@lkcc.org>
#
# This is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
# 
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this package; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,
# Boston, MA 02110-1301, USA.  
#

OWNER = <4>
TARGET_TYPE = Static Lib
NAME = libverilog

# List all sources here.
SOURCES = HBT_X.analogfunction.cpp HBT_X.core.cpp \
        hicumL2V2p1.analogfunction.cpp hicumL2V2p1.core.cpp \
        mod_amp.analogfunction.cpp mod_amp.core.cpp \
        hic2_full.analogfunction.cpp hic2_full.core.cpp \
        log_amp.analogfunction.cpp log_amp.core.cpp \
        hic0_full.analogfunction.cpp hic0_full.core.cpp \
        potentiometer.analogfunction.cpp potentiometer.core.cpp \
        MESFET.analogfunction.cpp MESFET.core.cpp \
	EKV26MOS.analogfunction.cpp EKV26MOS.core.cpp \
        hicumL0V1p2.analogfunction.cpp hicumL0V1p2.core.cpp \
        hicumL0V1p2g.analogfunction.cpp hicumL0V1p2g.core.cpp \
        hicumL2V2p23.analogfunction.cpp hicumL2V2p23.core.cpp \
	hicumL2V2p24.analogfunction.cpp hicumL2V2p24.core.cpp \
        photodiode.analogfunction.cpp photodiode.core.cpp \
	phototransistor.analogfunction.cpp phototransistor.core.cpp \
	nigbt.analogfunction.cpp nigbt.core.cpp \
	dff_SR.analogfunction.cpp dff_SR.core.cpp \
	tff_SR.analogfunction.cpp tff_SR.core.cpp \
	jkff_SR.analogfunction.cpp jkff_SR.core.cpp \
	gatedDlatch.analogfunction.cpp gatedDlatch.core.cpp \
	logic_0.analogfunction.cpp logic_0.core.cpp \
	logic_1.analogfunction.cpp logic_1.core.cpp \
	mux2to1.analogfunction.cpp mux2to1.core.cpp \
	mux4to1.analogfunction.cpp mux4to1.core.cpp \
	mux8to1.analogfunction.cpp mux8to1.core.cpp \
	DLS_nto1.analogfunction.cpp DLS_nto1.core.cpp \
	DLS_1ton.analogfunction.cpp DLS_1ton.core.cpp \
	andor4x2.analogfunction.cpp andor4x2.core.cpp \
	andor4x3.analogfunction.cpp andor4x3.core.cpp \
	andor4x4.analogfunction.cpp andor4x4.core.cpp \
	dmux2to4.analogfunction.cpp dmux2to4.core.cpp \
	dmux3to8.analogfunction.cpp dmux3to8.core.cpp \
	dmux4to16.analogfunction.cpp dmux4to16.core.cpp \
	ha1b.analogfunction.cpp ha1b.core.cpp \
	fa1b.analogfunction.cpp fa1b.core.cpp \
	fa2b.analogfunction.cpp fa2b.core.cpp \
	pad2bit.analogfunction.cpp pad2bit.core.cpp \
	pad3bit.analogfunction.cpp pad3bit.core.cpp \
	pad4bit.analogfunction.cpp pad4bit.core.cpp \
	binarytogrey4bit.analogfunction.cpp binarytogrey4bit.core.cpp \
	greytobinary4bit.analogfunction.cpp greytobinary4bit.core.cpp \
	comp_1bit.analogfunction.cpp comp_1bit.core.cpp \
	comp_2bit.analogfunction.cpp comp_2bit.core.cpp \
	comp_4bit.analogfunction.cpp comp_4bit.core.cpp \
	hpribin4bit.analogfunction.cpp hpribin4bit.core.cpp

# Additional libraries.
LIBS = 

# Linker flags.
LDFLAGS = 

# Include paths.
INCLUDES = -I.. -I../.. -I../../.. -I../devices -I../../math

# Preprocessor flags.
DEFS = 

# Extra debug preprocessor flags.
dbg_DEFS = -DDEBUG
